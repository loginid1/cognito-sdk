#
# Copyright (c) Login ID Inc.
#
---
image: node:20

cache:  # Cache modules in between jobs
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .npm/

before_script:
  - npm ci --cache .npm --prefer-offline

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml

stages: 
  - deps
  - test
  - publish

# Override cause node not installed in security scans
nodejs-scan-sast:
  before_script: []

secret_detection:
  before_script: []

semgrep-sast:
  before_script: []

# Initates cache for other jobs
install:
  stage: deps
  script:
    - echo "installing dependencies"

build:
  stage: test
  script:
    - npm run build
  artifacts:
    paths:
      - ./dist
    expire_in: 5 mins

npm-audit:
  stage: test
  script:
    - npm audit --audit-level=low

linter:
  stage: test
  script:
    - npm run lint

deploy_npm:
  stage: publish
  script:
    - apt-get update -y
    - apt-get install -y jq
    - echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
    - jq --arg version "$CI_COMMIT_TAG" '.version = $version' package.json > tmp.json && mv tmp.json package.json
    - npm config set //registry.npmjs.org/:_authToken ${NPM_AUTH_TOKEN}
    - >
      if [[ "$CI_COMMIT_TAG" == *"alpha"* ]]; then
        npm publish --tag alpha --verbose
      else
        npm publish --verbose
      fi
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "merge_request_event"
    when: never
  - if: $CI_COMMIT_TAG
    when: always

create_release:
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script: []
  script:
    - echo "A release is being created"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_TAG
      when: always
  release:
    tag_name: $CI_COMMIT_TAG
    description: $CI_COMMIT_TAG
    ref: $CI_COMMIT_SHA
